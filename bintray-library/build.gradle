apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// Using publish
//apply plugin: 'maven-publish'


group = rootProject.ext.packageName
version = rootProject.ext.libVersionName

// Local aar info
install {
    repositories.mavenInstaller {
        pom.project {
            name 'Bintray sample library'
            description 'Is bintray sample'
            url rootProject.ext.defaultUrl
            inceptionYear '2016' // release date

            // gradle dependency
            // ex) compile 'tech.thdev:bintray-sample:0.0.1'
            packaging 'aar'
            groupId rootProject.ext.packageName // compile 'tech.thdev:
            artifactId 'bintray-sample' // :bintray-sample:
            version rootProject.ext.libVersionName // :0.0.1-alpha

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            scm { // Optional setting
                connection rootProject.ext.defaultRepoUrl
                developerConnection rootProject.ext.defaultRepoUrl
                url rootProject.ext.defaultUrl
            }

            developers { // Optional setting
                developer {
                    id 'taehwandev'
                    name 'taehwan'
                    email 'taehwan@thdev.tech'
                }
            }
        }
    }
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            groupId 'tech.thdev'
//            version releaseVersion
//            artifactId 'sample-base'
//        }
//    }
//}

// Bintray setting... and upload
bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

//    publications = ['mavenJava']  // When uploading Maven-based publication files
    configurations = ['archives'] // When uploading configuration files

    publish = true // [Default: false] Whether version should be auto published after an upload

    pkg {
        repo = repositoryName // Repository name (Created in the repository Bintray site)
        name = project.name // package name
        userOrg = user // An optional organization name when the repo belongs to one of the user's orgs
        desc = 'Bintray sample library' // Optional
        licenses = ['Apache-2.0']

        vcsUrl = rootProject.ext.defaultRepoUrl
        websiteUrl = rootProject.ext.defaultUrl
        // issueTrackerUrl = '' // Optional

        labels = ['aar', 'android', 'example'] // Optional
        publicDownloadNumbers = true

        githubRepo = 'taehwandev/BintraySample' // Optional Github repository
        githubReleaseNotesFile = 'CONTRIBUTING.md' // Optional Github readme file

        version {
            name = rootProject.ext.libVersionName // The name of your library project
            desc = 'Gradle Bintray sample' // Optional - Version-specific description'
            released  = new Date() // Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
            vcsTag = rootProject.ext.libVersionName
        }
    }
}
// Bintray setting end


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.libVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile(rootProject.ext.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile rootProject.ext.appCompat
    testCompile rootProject.ext.junit
}
